{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "excel-formula",
  "scopeName": "source.excel-formula",
  "patterns": [
    { "include": "#strings" },
    { "include": "#functions" },
    { "include": "#cellReferences" },
    { "include": "#structuredReferences" },
    { "include": "#errors" },
    { "include": "#booleans" },
    { "include": "#numbers" },
    { "include": "#operators" }
  ],
  "repository": {
    "functions": {
      "patterns": [
        {
          "match": "\\b[A-Z][A-Z0-9\\.]*\\b(?=\\s*\\()",
          "name": "support.function.excel"
        }
      ]
    },
    "cellReferences": {
      "patterns": [
        {
          "match": "((?:'[^']+'|[A-Za-z0-9_\\.]+)!)?\\$?[A-Za-z]{1,3}\\$?\\d{1,7}(?::((?:'[^']+'|[A-Za-z0-9_\\.]+)!)?\\$?[A-Za-z]{1,3}\\$?\\d{1,7})?",
          "name": "variable.parameter.cellref.excel"
        }
      ]
    },
    "structuredReferences": {
      "patterns": [
        {
          "match": "@\\s*(?:\\[[^\\]]+\\]|[A-Za-z_][A-Za-z0-9_]*)",
          "name": "keyword.operator.implicit-intersection.excel"
        },
        {
          "match": "\\b[A-Za-z_][A-Za-z0-9_]*\\[[^\\]]+\\]",
          "name": "variable.other.table.excel"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "begin": "\"",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.string.begin.excel" }
          },
          "end": "\"",
          "endCaptures": {
            "0": { "name": "punctuation.definition.string.end.excel" }
          },
          "name": "string.quoted.double.excel",
          "patterns": [
            {
              "match": "\"\"",
              "name": "constant.character.escape.excel"
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "match": "\\b\\d+(?:\\.\\d+)?(?:E[+-]?\\d+)?\\b",
          "name": "constant.numeric.excel"
        }
      ]
    },
    "booleans": {
      "patterns": [
        {
          "match": "\\b(TRUE|FALSE)\\b",
          "name": "constant.language.boolean.excel"
        }
      ]
    },
    "errors": {
      "patterns": [
        {
          "match": "#(?:NULL!|DIV/0!|VALUE!|REF!|NAME\\?|NUM!|N/A|CALC!)",
          "name": "invalid.illegal.error.excel"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "match": "\\+|\\-|\\*|/|\\^|&|%|=|<>|>=|<=|>|<",
          "name": "keyword.operator.excel"
        }
      ]
    }
  }
}
